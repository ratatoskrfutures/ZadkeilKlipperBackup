#####################################################################
#  Print Start and End Macros
#####################################################################

[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed, extruder, and chamber temps and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("45")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  # Home the printer, set absolute positioning and update the Stealthburner LEDs.
  _CG28                                                  # Conditional Homing (XYZ)
  G90                                                   # Absolute position

  ##  Uncomment for bed mesh (1 of 2 for bed mesh)
  BED_MESH_CLEAR                                       # Clear old saved bed mesh (if any)

  # Check if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if params.BED|int > 90 %}
    SET_DISPLAY_TEXT MSG="Heating bed to {target_bed}c..."           # Display info on display
    M117 Heating Bed...
    # status_heating                                      # Set LEDs to heating-mode
    M106 S255                                           # Turn on the PT-fan

    ##  Uncomment if you have a Nevermore.
    #SET_PIN PIN=nevermore VALUE=1                      # Turn on the nevermore

    PARK_BED                                            # Bed parking
    M190 S{target_bed}                                  # Set the target temp for the bed
    SET_DISPLAY_TEXT MSG="Heatsoaking chamber at {target_chamber}c..."  # Display info on display
    M117 Heatsoaking...
    TEMPERATURE_WAIT SENSOR="temperature_sensor Chamber_Temp" MINIMUM={target_chamber}   # Waits for chamber temp
    RESPOND MSG="Chamber is at printing temperature"

# If the bed temp is not over 90c, then skip the heatsoak and just heat up to set temp with a 5 min soak
  {% else %}
    SET_DISPLAY_TEXT MSG="Heating bed to {target_bed}c..."           # Display info on the printer's display
    M117 Heating Bed...                                        # Send a message to the printer's status line
    # status_heating                                      # Set the printer's LEDs (if supported) to indicate heating
    PARK_BED                                            # Execute the smart parking macro (likely moves the print head)
    M190 S{target_bed}                                  # Set the target temperature for the bed and wait until it's reached
    SET_DISPLAY_TEXT MSG="Heatsoaking for 5 minutes..."               # Display info on the printer's display
    M117 Heatsoaking for 5 minutes...                           # Send a message to the printer's status line
    # status_busy                                         # Set the printer's LEDs (if supported) to indicate busy
    {% for i in range(5) %}                               # Start a loop that will run 5 times (for 5 minutes of heat soak)
      {% set remaining_minutes = 5 - loop.index %}         # Calculate the number of remaining minutes in the heat soak
      RESPOND MSG="Heat soak countdown: {remaining_minutes} minute(s) remaining..." # Send a message to the host (e.g., OctoPrint) indicating the remaining time
      G4 P60000                                          # Pause the execution for 60,000 milliseconds (1 minute)
    {% endfor %}                                        # End the loop
    RESPOND MSG="Heat soak complete!"                         # Send a message to the host indicating the heat soak is finished
  {% endif %}

  # Heat hotend to 150c. This helps with getting a correct Z-home.
  # status_heating
  SET_DISPLAY_TEXT MSG="Heating hotend to 150c..."                   # Display info on display
  M109 S150                                             # Heat hotend to 150c

  #  Uncomment for V2.4 (Quad gantry level AKA QGL)
  SET_DISPLAY_TEXT MSG="Leveling..."                      # Display info on display
  M117 Performing a gantry level...
  # status_leveling                                      # Set LEDs to leveling-mode
  QUAD_GANTRY_LEVEL                                    # Level the printer via QGL
  G28 Z                                                # Home Z again after QGL


  #  Uncomment for bed mesh (2 of 2 for bed mesh)
  SET_DISPLAY_TEXT MSG="Performing bed mesh..."                      # Display info on display
  M117 Bed Meshing...
  RESPOND MSG="Performing a bed mesh..."
  # status_meshing                                      # Set LEDs to bed mesh-mode
  BED_MESH_CALIBRATE                                   # Start the bed mesh (add ADAPTIVE=1) for adaptive bed mesh

  # Heat up the hotend up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Heating hotend to {target_extruder}c..."     # Display info on display
  # status_heating                                        # Set LEDs to heating-mode
  SMART_PARK                                            # Smart parking
  M107                                                  # Turn off partcooling fan
  M109 S{target_extruder}                               # Heat the hotend to set temp

  # Get ready to print by doing a primeline and updating the LEDs
  SET_DISPLAY_TEXT MSG="Print Started!"               # Display info on display
  M117 Print Started
  RESPOND MSG="Print Started!"
  # status_printing                                       # Set LEDs to printing-mode
  SMART_PARK                                            # Smart parking
  #VORON_PURGE
  G90                                                   # Absolute position

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script
gcode:
    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
    
    #   Check end position to determine safe directions to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}
    
    #  Commence PRINT_END
    M400                             ; wait for buffer to clear
    G92 E0                           ; zero the extruder
    G1 E-4.0 F3600                   ; retract
    G91                              ; relative positioning
    G0 Z{z_safe} F3600               ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000    ; move nozzle to remove stringing
    
    M104 S0                          ; turn off hotend
    M140 S0                          ; turn off bed
    M106 S0                          ; turn off fan
    G90                              ; absolute positioning
    G0 X{max_x / 2} Y{max_y-20} F3600   ; park nozzle at rear
    SET_DISPLAY_TEXT MSG="Print Finished!"               # Display info on display
    M117 Print Finished
    RESPOND MSG="Print Finished!"